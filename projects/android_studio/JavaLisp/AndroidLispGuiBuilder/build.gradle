buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:2.3.0'
	}
}


apply plugin: 'com.android.application'

repositories {
	jcenter()
}

android {
	compileSdkVersion 19
	buildToolsVersion '25.0.0'
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}

	packagingOptions {
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/NOTICE'
		exclude 'META-INF/LICENSE.txt'
		exclude 'META-INF/NOTICE.txt'
	}


    defaultConfig {

        // This block is different from the one you use to link Gradle
        // to your CMake or ndk-build script.
        externalNativeBuild {

            // For ndk-build, instead use the ndkBuild block.
            cmake {

                // Passes optional arguments to CMake.
                arguments "-DANDROID_ARM_NEON=TRUE", "-DANDROID_TOOLCHAIN=clang"

                // Sets optional flags for the C compiler.
                //cFlags "-D_EXAMPLE_C_FLAG1", "-D_EXAMPLE_C_FLAG2"

                // Sets a flag to enable format macro constants for the C++ compiler.
                cppFlags "-D__STDC_FORMAT_MACROS"
            }
        }

        ndk {
            //abiFilters 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'arm64-v8a'
            // add the abi that you have installed in your sdk ( but can't add mips
            // due to bug (3/27/2017 - https://github.com/android-ndk/ndk/issues/290) handling empty brackets {} in c source files)
            abiFilters 'x86', 'armeabi', 'armeabi-v7a'
        }
    }


    /*



	externalNativeBuild {
		cmake {

			path 'CMakeLists.txt'
		}
	}
*/

    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
}



dependencies {
	compile project(':common-library')
	compile project(':AndroidTools')
	compile fileTree(dir: 'libs', include: ['*.jar'])
	compile "com.fasterxml.jackson.core:jackson-databind:2.6.0"
	compile "de.greenrobot:eventbus:2.4.0"
}